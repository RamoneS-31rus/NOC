# Generated by Django 3.2.4 on 2021-12-24 16:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('addressbook', '0003_auto_20211224_1258'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Нет кабеля', 'Нет кабеля'), ('Необходима сварка', 'Необходима сварка'), ('Готов к подключению', 'Готов к подключению')], default='Нет кабеля', max_length=20, verbose_name='Статус')),
                ('note', models.TextField(blank=True, verbose_name='Примечание')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='addressbook.address', verbose_name='Адрес')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpon.area', verbose_name='Зона')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Ont',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Модель ONT')),
            ],
        ),
        migrations.CreateModel(
            name='Router',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Модель Wi-Fi роутера')),
                ('price', models.IntegerField(verbose_name='Стоимость Wi-Fi роутера')),
            ],
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название тарифа')),
                ('speed', models.IntegerField(default='100', verbose_name='Скорость Мбит/с')),
                ('price', models.IntegerField(verbose_name='Стоимость тарифа')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='ФИО')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
                ('date_req', models.DateField(auto_now_add=True, verbose_name='Дата заявки')),
                ('date_con', models.DateTimeField(blank=True, null=True, verbose_name='Дата подключения')),
                ('price_con', models.IntegerField(default='6000', verbose_name='Цена подключения')),
                ('note', models.TextField(blank=True, verbose_name='Примечание')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('status', models.BooleanField(default=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request', to='gpon.house', verbose_name='Адрес')),
                ('installer', models.ManyToManyField(blank=True, related_name='installer', to=settings.AUTH_USER_MODEL, verbose_name='Монтажники')),
                ('manager', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='manager', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('ont', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gpon.ont', verbose_name='Модель ONT')),
                ('router', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gpon.router', verbose_name='Модель Wi-Fi роутера')),
                ('tariff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gpon.tariff', verbose_name='Тариф')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
    ]
